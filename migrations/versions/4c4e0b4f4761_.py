"""empty message

Revision ID: 4c4e0b4f4761
Revises: 329c7da05e93
Create Date: 2021-03-24 21:31:41.361703

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4c4e0b4f4761'
down_revision = '329c7da05e93'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('file_secret',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('line', sa.String(), nullable=True),
    sa.Column('line_number', sa.String(), nullable=True),
    sa.Column('offender', sa.String(), nullable=True),
    sa.Column('commit', sa.String(), nullable=True),
    sa.Column('rule', sa.String(), nullable=True),
    sa.Column('commit_message', sa.String(), nullable=True),
    sa.Column('author', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('file', sa.String(), nullable=True),
    sa.Column('tags', sa.String(), nullable=True),
    sa.Column('file_id', sa.Integer(), nullable=False),
    sa.Column('date_added', sa.DateTime(), nullable=True),
    sa.Column('date_updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['file_id'], ['file.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('file_vuln',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('license', sa.String(), nullable=True),
    sa.Column('identifiers', sa.String(), nullable=True),
    sa.Column('cpe', sa.String(), nullable=True),
    sa.Column('cve', sa.String(), nullable=True),
    sa.Column('cwe', sa.String(), nullable=True),
    sa.Column('vulnerability', sa.String(), nullable=True),
    sa.Column('source', sa.String(), nullable=True),
    sa.Column('cvssv2_severity', sa.String(), nullable=True),
    sa.Column('cvssv2_score', sa.Float(), nullable=True),
    sa.Column('cvssv2', sa.String(), nullable=True),
    sa.Column('cvssv3_base_severity', sa.String(), nullable=True),
    sa.Column('cvssv3_base_score', sa.Float(), nullable=True),
    sa.Column('cvssv3', sa.String(), nullable=True),
    sa.Column('cpe_confidence', sa.String(), nullable=True),
    sa.Column('evidence_count', sa.Float(), nullable=True),
    sa.Column('file_id', sa.Integer(), nullable=False),
    sa.Column('date_added', sa.DateTime(), nullable=True),
    sa.Column('date_updated', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['file_id'], ['file.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('iplocation')
    op.drop_table('app_data')
    op.drop_table('asset_whois')
    op.drop_table('asset_certificate')
    op.drop_table('exclusion')
    op.drop_table('asset_alias')
    op.drop_table('asset_location')
    op.drop_table('insight')
    op.drop_table('port_data')
    op.drop_table('asset')
    op.drop_table('asset_status')
    op.drop_table('asset_address')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('asset_address',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('value', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_global', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('asset_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date_added', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('date_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['asset.id'], name='asset_address_asset_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='asset_address_pkey')
    )
    op.create_table('asset_status',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('state', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('os', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('accuracy', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('vendor', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('osfamily', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('osgen', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('asset_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date_added', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('date_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['asset.id'], name='asset_status_asset_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='asset_status_pkey')
    )
    op.create_table('asset',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('asset_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('host', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('source', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('enabled', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('wildcard', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('online', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('enumerate', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('scan', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('monitor', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('method', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('zone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('uptime', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_boot', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('suffix', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('root', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('subdomain', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('date_added', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('date_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='asset_pkey'),
    sa.UniqueConstraint('host', name='asset_host_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('port_data',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('host', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('scan_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('port', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('state', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('reason', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('product', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('version', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('extrainfo', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('conf', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cpe', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('script', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('protocol', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('severity', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('asset_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date_added', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('date_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['asset.id'], name='port_data_asset_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='port_data_pkey')
    )
    op.create_table('insight',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('category', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('solution', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('severity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('ease', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('confidence', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('evidence', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('hits', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('risk', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('status', sa.VARCHAR(), server_default=sa.text("'open'::character varying"), autoincrement=False, nullable=True),
    sa.Column('asset_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date_added', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('date_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['asset.id'], name='insight_asset_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='insight_pkey')
    )
    op.create_table('asset_location',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('country_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('country_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('region_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('city_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('lat', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('long', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('asset_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date_added', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('date_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['asset.id'], name='asset_location_asset_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='asset_location_pkey')
    )
    op.create_table('asset_alias',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('value', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('asset_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date_added', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('date_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['asset.id'], name='asset_alias_asset_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='asset_alias_pkey')
    )
    op.create_table('exclusion',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('value', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('enabled', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('type', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('date_added', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('date_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='exclusion_pkey'),
    sa.UniqueConstraint('value', name='exclusion_value_key')
    )
    op.create_table('asset_certificate',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('serial_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('issuer_c', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('issuer_o', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('issuer_cn', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('subject_c', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('subject_o', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('subject_cn', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('subject_st', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('subject_l', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('version', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('not_before', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('not_after', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('expired', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('extension_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('signature_algo', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('authority_key_identifier', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('subject_key_identifier', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('subject_altname', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('key_usage', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('extended_key_usage', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('crl_distribution_points', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('certificate_policies', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('authority_info_access', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('basic_constraints', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('ct_precert_scts', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('extra', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('asset_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date_added', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('date_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['asset.id'], name='asset_certificate_asset_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='asset_certificate_pkey'),
    sa.UniqueConstraint('serial_number', name='asset_certificate_serial_number_key')
    )
    op.create_table('asset_whois',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('domain_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('registrar', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('whois_server', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('referral_url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('updated_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('creation_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('expiration_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('name_servers', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('delete_prohibited', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('renew_prohibited', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('transfer_prohibited', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('update_prohibited', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('emails', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('dnssec', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('org', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('state', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('zipcode', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('country', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('extra', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('asset_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date_added', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('date_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['asset.id'], name='asset_whois_asset_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='asset_whois_pkey')
    )
    op.create_table('app_data',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('host', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('scan_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('uuid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('sourceid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('other', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('method', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('evidence', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('pluginId', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('cweid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('confidence', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('wascid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('messageId', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('reference', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('solution', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('alert', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('param', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('attack', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('path', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('extension', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('risk', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('severity', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('pid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('asset_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('date_added', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('date_updated', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['asset_id'], ['asset.id'], name='app_data_asset_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='app_data_pkey')
    )
    op.create_table('iplocation',
    sa.Column('ip_from', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('ip_to', sa.BIGINT(), autoincrement=False, nullable=False),
    sa.Column('country_code', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('country_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('region_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('city_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('latitude', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('longitude', postgresql.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('ip_from', 'ip_to', name='iplocation_pkey')
    )
    op.drop_table('file_vuln')
    op.drop_table('file_secret')
    # ### end Alembic commands ###
